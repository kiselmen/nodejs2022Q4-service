openapi: 3.0.0
paths:
  /user:
    get:
      operationId: UsersController_getAllUsers
      summary: Get all users
      parameters: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
      tags: &a1
        - Users
    post:
      operationId: UsersController_createUser
      summary: Create user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserDto"
      responses:
        "400":
          description: Bad request. Miss required fields
      tags: *a1
  "/user/{id}":
    get:
      operationId: UsersController_getUserByID
      summary: Get user by id
      parameters:
        - name: id
          required: true
          in: path
          description: User ID
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request. Invalid userId (not uuid)
        "404":
          description: User not found
      tags: *a1
    put:
      operationId: UsersController_updateUserPassword
      summary: Update a user's password
      parameters:
        - name: id
          required: true
          in: path
          description: User ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePasswordDto"
      responses:
        "400":
          description: Bad request. Miss required fields
        "403":
          description: oldPassowrd is wrong
        "404":
          description: User not found
      tags: *a1
    delete:
      operationId: UsersController_deleteUser
      summary: Delete user
      parameters:
        - name: id
          required: true
          in: path
          description: User ID
          schema:
            type: string
      responses:
        "204":
          description: The user has been deleted
        "400":
          description: Bad request. Invalid userId (not uuid)
        "404":
          description: User not found
      tags: *a1
  /artist:
    get:
      operationId: ArtistsController_getAllArtists
      summary: Get all artists
      parameters: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Artist"
      tags: &a2
        - Artists
    post:
      operationId: ArtistsController_createArtist
      summary: Create artist
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateArtistDto"
      responses:
        "400":
          description: Bad request. Miss required fields
      tags: *a2
  "/artist/{id}":
    get:
      operationId: ArtistsController_getArtistByID
      summary: Get artist by ID
      parameters:
        - name: id
          required: true
          in: path
          description: Artist ID
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Artist"
        "400":
          description: Bad request. Invalid artistId (not uuid)
        "404":
          description: Artist not found
      tags: *a2
    put:
      operationId: ArtistsController_updateArtist
      summary: Update a artist's data
      parameters:
        - name: id
          required: true
          in: path
          description: Artist ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateArtistDto"
      responses:
        "400":
          description: Bad request. Miss required fields
        "404":
          description: Artist not found
      tags: *a2
    delete:
      operationId: ArtistsController_deleteArtist
      summary: Delete artist
      parameters:
        - name: id
          required: true
          in: path
          description: Artist ID
          schema:
            type: string
      responses:
        "204":
          description: The artist has been deleted
        "400":
          description: Bad request. Invalid artistId (not uuid)
        "404":
          description: Artist not found
      tags: *a2
  /album:
    get:
      operationId: AlbumsController_getAllAlbums
      summary: Get all albums
      parameters: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Album"
      tags: &a3
        - Albums
    post:
      operationId: AlbumsController_createAlbum
      summary: Create album
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAlbumDto"
      responses:
        "400":
          description: Bad request. Miss required fields
      tags: *a3
  "/album/{id}":
    get:
      operationId: AlbumsController_getAlbumByID
      summary: Get single album by id
      parameters:
        - name: id
          required: true
          in: path
          description: album ID
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Album"
        "400":
          description: Bad request. Invalid albumsId (not uuid)
        "404":
          description: album not found
      tags: *a3
    put:
      operationId: AlbumsController_updateAlbum
      summary: Update a album's information
      parameters:
        - name: id
          required: true
          in: path
          description: album ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAlbumDto"
      responses:
        "400":
          description: Bad request. Miss required fields
        "404":
          description: album not found
      tags: *a3
    delete:
      operationId: AlbumsController_deleteAlbum
      summary: Delete album
      parameters:
        - name: id
          required: true
          in: path
          description: album ID
          schema:
            type: string
      responses:
        "204":
          description: The album has been deleted
        "400":
          description: Bad request. Invalid albumsId (not uuid)
        "404":
          description: album not found
      tags: *a3
  /track:
    get:
      operationId: TracksController_getAllTracks
      summary: Get all tracks
      parameters: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Track"
      tags: &a4
        - Tracks
    post:
      operationId: TracksController_createTrack
      summary: Create track
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTrackDto"
      responses:
        "400":
          description: Bad request. Miss required fields
      tags: *a4
  "/track/{id}":
    get:
      operationId: TracksController_getTrackByID
      summary: Get single track by id
      parameters:
        - name: id
          required: true
          in: path
          description: track ID
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Track"
        "400":
          description: Bad request. Invalid trackId (not uuid)
        "404":
          description: track not found
      tags: *a4
    put:
      operationId: TracksController_updateTrack
      summary: Update a track's data
      parameters:
        - name: id
          required: true
          in: path
          description: track ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTrackDto"
      responses:
        "400":
          description: Bad request. Miss required fields
        "404":
          description: track not found
      tags: *a4
    delete:
      operationId: TracksController_deleteTrack
      summary: Delete track
      parameters:
        - name: id
          required: true
          in: path
          description: track ID
          schema:
            type: string
      responses:
        "204":
          description: The track has been deleted
        "400":
          description: Bad request. Invalid trackId (not uuid)
        "404":
          description: track not found
      tags: *a4
  /favs:
    get:
      operationId: FavoritesController_getAllFavorites
      summary: Get all favorites
      parameters: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Favorite"
      tags: &a5
        - Favorites
  "/favs/track/{id}":
    post:
      operationId: FavoritesController_addTrackToFavorites
      summary: Add track to the favorites
      parameters:
        - name: id
          required: true
          in: path
          description: track ID
          schema:
            type: string
      responses:
        "201":
          description: ""
      tags: *a5
    delete:
      operationId: FavoritesController_deleteTrackFromFavorites
      summary: Delete track from favorites
      parameters:
        - name: id
          required: true
          in: path
          description: track ID
          schema:
            type: string
      responses:
        "204":
          description: The track has been deleted
        "400":
          description: Bad request. Invalid trackId (not uuid)
        "404":
          description: Track was not found.
      tags: *a5
  "/favs/album/{id}":
    post:
      operationId: FavoritesController_addAlbumToFavorites
      summary: Add album to the favorites
      parameters:
        - name: id
          required: true
          in: path
          description: album ID
          schema:
            type: string
      responses:
        "201":
          description: ""
      tags: *a5
    delete:
      operationId: FavoritesController_deleteAlbumFromFavorites
      summary: Delete album from favorites
      parameters:
        - name: id
          required: true
          in: path
          description: album ID
          schema:
            type: string
      responses:
        "204":
          description: The album has been deleted
        "400":
          description: Bad request. Invalid albumId (not uuid)
        "404":
          description: Album was not found.
      tags: *a5
  "/favs/artist/{id}":
    post:
      operationId: FavoritesController_addArtistToFavorites
      summary: Add artist to the favorites
      parameters:
        - name: id
          required: true
          in: path
          description: artist ID
          schema:
            type: string
      responses:
        "201":
          description: ""
      tags: *a5
    delete:
      operationId: FavoritesController_deleteArtistFromFavorites
      summary: Delete artist from favorites
      parameters:
        - name: id
          required: true
          in: path
          description: artist ID
          schema:
            type: string
      responses:
        "204":
          description: The artist has been deleted
        "400":
          description: Bad request. Invalid artistId (not uuid)
        "404":
          description: Artist was not found.
      tags: *a5
info:
  title: Home Library Service
  description: Home Library Service
  version: 1.0.1
  contact: {}
tags: []
servers:
  - url: http://localhost:4000
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: user id
          nullable: false
        login:
          type: string
          description: User login
          nullable: true
        password:
          type: string
          description: User password
          nullable: true
        version:
          type: number
          description: User version
          nullable: true
        createdAt:
          type: number
          description: User createdAt
          nullable: true
        updatedAt:
          type: number
          description: User updatedAt
          nullable: true
      required:
        - id
        - login
        - password
        - version
        - createdAt
        - updatedAt
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
          description: User login
          nullable: true
        password:
          type: string
          description: User password
          nullable: true
      required:
        - login
        - password
    UpdatePasswordDto:
      type: object
      properties:
        oldPassword:
          type: string
          description: Old user password
        newPassword:
          type: string
          description: User password
      required:
        - oldPassword
        - newPassword
    Artist:
      type: object
      properties:
        id:
          type: string
          description: Artist identifier
          nullable: false
        name:
          type: string
          description: Artist name
          nullable: true
        grammy:
          type: boolean
          description: Artist grammy
          nullable: true
      required:
        - id
        - name
        - grammy
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: Artist name
          nullable: true
        grammy:
          type: boolean
          description: Artist grammy
          nullable: true
      required:
        - name
        - grammy
    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: Artist name
          nullable: true
        grammy:
          type: boolean
          description: Artist grammy
          nullable: true
    Album:
      type: object
      properties:
        id:
          type: string
          description: Album identifier
          nullable: false
        name:
          type: string
          description: Album name
          nullable: true
        year:
          type: number
          description: Album year
          nullable: true
        artistId:
          type: string
          description: Artist ID
          nullable: true
      required:
        - id
        - name
        - year
        - artistId
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: Album name
          nullable: true
        year:
          type: number
          description: Album year
          nullable: true
        artistId:
          type: string
          description: Artist ID
          nullable: true
      required:
        - name
        - year
        - artistId
    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: Album New name
          nullable: true
        year:
          type: number
          description: Album year
          nullable: true
        artistId:
          type: string
          description: Artist ID
          nullable: true
    Track:
      type: object
      properties:
        id:
          type: string
          description: Track identifier
          nullable: false
        name:
          type: string
          description: Track name
          nullable: true
        artistId:
          type: string
          description: Artist ID
          nullable: true
        albumId:
          type: string
          description: Album ID
          nullable: true
        duration:
          type: number
          description: Track duration
          nullable: true
      required:
        - id
        - name
        - artistId
        - albumId
        - duration
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
          description: Track name
          nullable: true
        artistId:
          type: string
          description: Artist ID
          nullable: true
        albumId:
          type: string
          description: Album ID
          nullable: true
        duration:
          type: number
          description: Album duration
          nullable: true
      required:
        - name
        - artistId
        - albumId
        - duration
    UpdateTrackDto:
      type: object
      properties:
        name:
          type: string
          description: New track name
          nullable: true
        artistId:
          type: string
          description: New artist ID
          nullable: true
        albumId:
          type: string
          description: New album ID
          nullable: true
        duration:
          type: number
          description: New duration
          nullable: true
    Favorite:
      type: object
      properties:
        artists:
          description: Artists
          nullable: true
          type: array
          items:
            type: string
        albums:
          description: Albums
          nullable: true
          type: array
          items:
            type: string
        tracks:
          description: Tracks
          nullable: true
          type: array
          items:
            type: string
      required:
        - artists
        - albums
        - tracks
